apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

apply from: '../gradle/scripts/play.gradle'

// Change this to listen on a different port
project.ext.httpPort = 19000
project.ext.playBinaryBaseName = "wherehows-backend"

//sourceCompatibility = 1.8

dependencies {
    // User defined libraries (will be copied to lib/ before `play compile`)
    play project(":wherehows-common")
    play project(":wherehows-etl")

    play externalDependency.play_java_jdbc
    play externalDependency.slf4j_api
    play externalDependency.jasypt
    play externalDependency.kafka
    play externalDependency.kafka_clients

    playTest 'com.github.stefanbirkner:system-rules:1.16.0'
    playTest 'org.easytesting:fest-assert-core:2.0M10'
    playTest externalDependency.mockito
}

configurations {
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'log4j'

    all*.resolutionStrategy {
        dependencySubstitution {
            substitute module('org.slf4j:slf4j-log4j12') with module('ch.qos.logback:logback-classic:1.1.7')
            //prefer 'log4j-over-slf4j' over 'log4j'
            force 'com.typesafe:config:1.3.1', 'io.netty:netty:3.10.6.Final'
        }
    }
}

model {
    distributions {
        playBinary {
            contents {
                from("jobs") {
                    into "jobs"
                }
                from("script") {
                    into "bin"
                }
               from("${projectDir}/../wherehows-etl/src/main/resources/jython"){
                   into "jython"
               }
            }
        }
    }
}

def nexusUsername="$System.env.ORG_GRADLE_PROJECT_nexusUsername"
def nexusPassword="$System.env.ORG_GRADLE_PROJECT_nexusPassword"

publishing {
    publications {
        pdZipPublication(MavenPublication) {
            groupId 'com.clarivate.wherehows'
            artifactId "${playBinaryBaseName}"
            version 'SNAPSHOT'
            artifact "${projectDir}/build/distributions/${playBinaryBaseName}.zip"
        }
    }
    repositories {
        maven {

            credentials {
                username nexusUsername
                password nexusPassword
            }
            // url 'http://localhost:8081/nexus/content/repositories/releases/'
            url 'http://repo.oneplatform.build/nexus/content/repositories/snapshot/'
        }
    }
}